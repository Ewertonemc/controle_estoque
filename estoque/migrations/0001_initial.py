# Generated by Django 5.2 on 2025-05-06 23:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_empresa', models.CharField(db_index=True, max_length=100, verbose_name='Razão Social')),
                ('cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.MinLengthValidator(14), django.core.validators.RegexValidator('^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$', 'Formato de CNPJ inválido')], verbose_name='CNPJ')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Formato de telefone inválido')], verbose_name='Telefone')),
                ('endereco', models.TextField(verbose_name='Endereço Completo')),
                ('categoria', models.CharField(choices=[('SUB_TRANS', 'Sublimação e Transfer'), ('SUB', 'Sublimação'), ('TRANS', 'Transfer'), ('TEC', 'Tecidos'), ('GERAL', 'Todos')], db_index=True, default='GERAL', max_length=9, verbose_name='Categoria')),
                ('nome_contato', models.CharField(max_length=100, verbose_name='Responsável')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail de Contato')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['nome_empresa'],
                'indexes': [models.Index(fields=['categoria', 'ativo'], name='estoque_for_categor_58bd30_idx')],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(blank=True, help_text='Imagem representativa do produto', null=True, upload_to='produtos/', verbose_name='Imagem do Produto')),
                ('nome', models.CharField(db_index=True, max_length=100, verbose_name='Nome')),
                ('nome_normalizado', models.CharField(db_index=True, editable=False, max_length=100)),
                ('quantidade', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantidade em Estoque')),
                ('quantidade_minima', models.IntegerField(default=5, help_text='Nível mínimo para alertas de reabastecimento', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade Mínima')),
                ('valor_unitario', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Valor Unitário')),
                ('categoria', models.CharField(choices=[('TEC', 'Tecidos'), ('SUB', 'Sublimação'), ('TRA', 'Transfer'), ('OUT', 'Outros')], default='OUT', max_length=3, verbose_name='Categoria')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['nome_normalizado'], name='estoque_pro_nome_no_d1bc6e_idx'), models.Index(fields=['categoria', 'quantidade'], name='estoque_pro_categor_24ee75_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('quantidade__gte', 0)), name='quantidade_nao_negativa'), models.CheckConstraint(condition=models.Q(('quantidade_minima__gte', 1)), name='quantidade_minima_positiva')],
            },
        ),
        migrations.CreateModel(
            name='LogAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data/Hora')),
                ('acao', models.CharField(choices=[('C', 'Criação'), ('E', 'Edição'), ('D', 'Exclusão'), ('I', 'Importação')], max_length=1, verbose_name='Ação')),
                ('modelo_afetado', models.CharField(max_length=50, verbose_name='Modelo Afetado')),
                ('objeto_id', models.CharField(max_length=36, verbose_name='ID do Objeto')),
                ('detalhes', models.JSONField(default=dict, verbose_name='Detalhes Técnicos')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição Humana')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Atividade',
                'verbose_name_plural': 'Logs de Atividades',
                'ordering': ['-data_hora'],
                'indexes': [models.Index(fields=['modelo_afetado', 'acao'], name='estoque_log_modelo__3d7e56_idx')],
            },
        ),
        migrations.CreateModel(
            name='Movimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('E', 'Entrada'), ('S', 'Saída')], db_index=True, max_length=1, verbose_name='Tipo de Movimentação')),
                ('quantidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Preço Unitário')),
                ('data', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data/Hora')),
                ('fornecedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes', to='estoque.fornecedor', verbose_name='Fornecedor')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes', to='estoque.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Movimentação',
                'verbose_name_plural': 'Movimentações',
                'ordering': ['-data'],
                'indexes': [models.Index(fields=['tipo', 'data'], name='estoque_mov_tipo_b96410_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('quantidade__gt', 0)), name='quantidade_movimentacao_positiva')],
            },
        ),
    ]
